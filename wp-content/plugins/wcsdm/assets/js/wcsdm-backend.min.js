!function(r){"use strict";function n(e){var t=function(e){var t,a,o=wcsdm_backend.i18n.buttons,n={id:"add-rate",icon:"plus",label:"Add New Rate"},d={id:"save-settings",icon:"yes",label:"Save Changes"},c={};_.has(e,"left")&&(t=_.defaults(e.left,n),_.has(o,t.label)&&(t.label=o[t.label]),c.btn_left=t);_.has(e,"right")&&(a=_.defaults(e.right,d),_.has(o,a.label)&&(a.label=o[a.label]),c.btn_right=a);_.isEmpty(c)&&(t=_.defaults({},n),_.has(o,t.label)&&(t.label=o[t.label]),c.btn_left=t,a=_.defaults({},d),_.has(o,a.label)&&(a.label=o[a.label]),c.btn_right=a);return c}(e);r("#wcsdm-buttons").remove(),r("#btn-ok").hide().after(wp.template("wcsdm-buttons")(t))}var m=!1,e=window.console.error;window.console.error=function(){1!==arguments[0].toLowerCase().indexOf("google")&&(m=arguments[0],window.alert(m),r("#api_key_browser").trigger("click"),r("#woocommerce_wcsdm_api_key_browser").val(p.apiKeyBrowser)),e.apply(e,arguments)};var p={params:{},origin_lat:"",origin_lng:"",origin_address:"",zoomLevel:16,apiKeyBrowser:"",init:function(e){p.params=e,r(document).off("click",".wcsdm-edit-api-key",p.editApiKey),r(document).on("click",".wcsdm-edit-api-key",p.editApiKey),r(document).off("click",".wcsdm-edit-api-key-cancel",p.editApiKeyCancel),r(document).on("click",".wcsdm-edit-api-key-cancel",p.editApiKeyCancel),r(document).off("click","#wcsdm-btn--get-api-key",p.getApiKey),r(document).on("click","#wcsdm-btn--get-api-key",p.getApiKey),r(document).off("click",".wcsdm-edit-location",p.showStoreLocationPicker),r(document).on("click",".wcsdm-edit-location",p.showStoreLocationPicker),r(document).off("click","#wcsdm-btn--map-cancel",p.hideStoreLocationPicker),r(document).on("click","#wcsdm-btn--map-cancel",p.hideStoreLocationPicker),r(document).off("click","#wcsdm-btn--map-apply",p.applyStoreLocation),r(document).on("click","#wcsdm-btn--map-apply",p.applyStoreLocation),r(document).off("click","#wcsdm-map-search-panel-toggle",p.toggleMapSearch),r(document).on("click","#wcsdm-map-search-panel-toggle",p.toggleMapSearch)},editApiKey:function(e){e.preventDefault();var a=r(e.currentTarget),t=a.next("a"),o=a.closest("tr").find("input[type=hidden]"),n=a.closest("tr").find("input[type=text]"),d=a.closest("tr").find(".spinner"),c=a.find(".dashicons"),i=o.val(),s=n.val();if(a.hasClass("editing")){if(!s.length)return;t.addClass("wcsdm-hidden"),a.removeClass("editing"),n.prop("readonly",!0),c.toggleClass("dashicons-edit").toggleClass("dashicons-yes");var l=function(e){var t=r.Deferred();return a.hide(),d.css("visibility","visible"),r(".wcsdm-buttons-item,.wcsdm-link").prop("disabled",!0).css("opacity",.5),setTimeout(function(){a.show(),d.css("visibility","hidden"),r(".wcsdm-buttons-item,.wcsdm-link").prop("disabled",!1).css("opacity",1),t.resolve(!0)},e),t.promise()};switch(a.attr("id")){case"api_key_browser":p.apiKeyBrowser=o.val(),window.google=void 0,m=!1,r.getScript("https://maps.googleapis.com/maps/api/js?libraries=geometry,places&key="+s,function(){l(5e3).then(function(){m||o.val(s)})});break;default:l(500).then(function(){o.val(s)})}}else a.show().addClass("editing"),t.removeClass("wcsdm-hidden"),c.toggleClass("dashicons-edit").toggleClass("dashicons-yes"),n.prop("readonly",!1).val(i),d.css("visibility","hidden")},editApiKeyCancel:function(e){e.preventDefault();var t=r(e.currentTarget),a=t.prev("a"),o=a.find(".dashicons"),n=t.closest("tr").find("input[type=hidden]"),d=t.closest("tr").find("input[type=text]");t.addClass("wcsdm-hidden"),a.removeClass("editing"),o.toggleClass("dashicons-yes").toggleClass("dashicons-edit"),d.prop("readonly",!0).val(n.val()),n.val().length&&(m=!1)},getApiKey:function(e){e.preventDefault(),window.open("https://cloud.google.com/maps-platform/#get-started","_blank").focus()},showStoreLocationPicker:function(e){e.preventDefault(),m?window.alert(m):(r(".modal-close-link").hide(),n({left:{id:"map-cancel",label:"Cancel",icon:"undo"},right:{id:"map-apply",label:"Apply Changes",icon:"editor-spellcheck"}}),r("#wcsdm-field-group-wrap--location_picker").fadeIn().siblings().hide(),p.initMap())},hideStoreLocationPicker:function(e){e.preventDefault(),p.destroyMap(),r(".modal-close-link").show(),n(),r("#wcsdm-field-group-wrap--location_picker").hide().siblings().not(".wcsdm-hidden").fadeIn()},applyStoreLocation:function(t){if(t.preventDefault(),!m){var e=r("#woocommerce_wcsdm_api_key_browser").val();if(!_.isEmpty(e)){var a,o,n;r.when((a=jQuery.Deferred(),o=new google.maps.LatLng(parseFloat(p.params.defaultLat),parseFloat(p.params.defaultLng)),n=new google.maps.LatLng(parseFloat(p.params.testLat),parseFloat(p.params.testLng)),(new google.maps.DistanceMatrixService).getDistanceMatrix({origins:[o],destinations:[n],travelMode:"DRIVING",unitSystem:google.maps.UnitSystem.METRIC},function(e,t){"ok"===t.toLowerCase()?a.resolve(t,e):a.reject(t,e)}),a.promise())).then(function(e){if("ok"===e.toLowerCase()&&!m)return r("#woocommerce_wcsdm_origin_lat").val(p.origin_lat),r("#woocommerce_wcsdm_origin_lng").val(p.origin_lng),r("#woocommerce_wcsdm_origin_address").val(p.origin_address),void p.hideStoreLocationPicker(t);m?window.alert(m):window.alert(e)})}}},toggleMapSearch:function(e){e.preventDefault(),r(e.currentTarget).find("span").toggleClass("dashicons-search").toggleClass("dashicons-dismiss"),r("#wcsdm-map-search-panel").toggleClass("hide-main"),r("#wcsdm-map-search-panel-main").toggleClass("wcsdm-hidden")},destroyMap:function(){window.google=void 0,r("#wcsdm-map-canvas").empty(),r("#wcsdm-map-search-panel").remove()},initMap:function(){p.destroyMap(),m=!1;var e=r("#woocommerce_wcsdm_api_key_browser").val();_.isEmpty(e)&&(e="InvalidKey");var t="https://maps.googleapis.com/maps/api/js?libraries=geometry,places&key="+e;r.getScript(t,function(){p.renderMap()})},renderMap:function(){p.origin_lat=r("#woocommerce_wcsdm_origin_lat").val(),p.origin_lng=r("#woocommerce_wcsdm_origin_lng").val();var e={lat:_.isEmpty(p.origin_lat)?parseFloat(p.params.defaultLat):parseFloat(p.origin_lat),lng:_.isEmpty(p.origin_lng)?parseFloat(p.params.defaultLng):parseFloat(p.origin_lng)},a=new google.maps.Map(document.getElementById("wcsdm-map-canvas"),{mapTypeId:"roadmap",center:e,zoom:p.zoomLevel,streetViewControl:!1,mapTypeControl:!1}),o=new google.maps.Marker({map:a,position:e,draggable:!0,icon:p.params.marker}),n=new google.maps.InfoWindow({maxWidth:350});_.isEmpty(p.origin_lat)||_.isEmpty(p.origin_lng)?(n.setContent(p.params.i18n.drag_marker),n.open(a,o)):p.setLatLng(o.position,o,a,n),google.maps.event.addListener(o,"dragstart",function(){n.close()}),google.maps.event.addListener(o,"dragend",function(e){p.setLatLng(e.latLng,o,a,n)}),r("#wcsdm-map-wrap").prepend(wp.template("wcsdm-map-search-panel")()),a.controls[google.maps.ControlPosition.TOP_LEFT].push(document.getElementById("wcsdm-map-search-panel"));var d=new google.maps.places.SearchBox(document.getElementById("wcsdm-map-search-input"));a.addListener("bounds_changed",function(){d.setBounds(a.getBounds())});var c=[];d.addListener("places_changed",function(){var e=d.getPlaces();if(0!==e.length){c.forEach(function(e){e.setMap(null)}),c=[];var t=new google.maps.LatLngBounds;e.forEach(function(e){e.geometry?(o=new google.maps.Marker({map:a,position:e.geometry.location,draggable:!0,icon:p.params.marker}),p.setLatLng(e.geometry.location,o,a,n),google.maps.event.addListener(o,"dragstart",function(){n.close()}),google.maps.event.addListener(o,"dragend",function(e){p.setLatLng(e.latLng,o,a,n)}),c.push(o),e.geometry.viewport?t.union(e.geometry.viewport):t.extend(e.geometry.location)):console.log("Returned place contains no geometry")}),a.fitBounds(t)}})},setLatLng:function(o,n,d,c){(new google.maps.Geocoder).geocode({latLng:o},function(e,t){if(t===google.maps.GeocoderStatus.OK&&e[0]){var a=[p.params.i18n.latitude+": "+o.lat().toString(),p.params.i18n.longitude+": "+o.lng().toString()];c.setContent(a.join("<br />")),c.open(d,n),n.addListener("click",function(){c.open(d,n)}),r("#wcsdm-map-search-input").val(e[0].formatted_address),p.origin_lat=o.lat(),p.origin_lng=o.lng(),p.origin_address=e[0].formatted_address}}),d.setCenter(o)}},d={params:{},errorId:"wcsdm-errors-rate-fields",init:function(e){d.params=e,r(document).off("click",".wcsdm-link--advanced-rate",d.showAdvancedRateForm),r(document).on("click",".wcsdm-link--advanced-rate",d.showAdvancedRateForm),r(document).off("click","#wcsdm-btn--cancel-advanced",d.closeAdvancedRateForm),r(document).on("click","#wcsdm-btn--cancel-advanced",d.closeAdvancedRateForm),r(document).off("click","#wcsdm-btn--apply-advanced",d.applyAdvancedForm),r(document).on("click","#wcsdm-btn--apply-advanced",d.applyAdvancedForm),r(document).off("click","#wcsdm-btn--add-rate",d.handleAddRateButton),r(document).on("click","#wcsdm-btn--add-rate",d.handleAddRateButton),r(document).off("click","#wcsdm-btn--delete-rate-select",d.deleteRateRow),r(document).on("click","#wcsdm-btn--delete-rate-select",d.deleteRateRow),r(document).off("click","#wcsdm-btn--delete-rate-cancel",d.deleteRateRowCancel),r(document).on("click","#wcsdm-btn--delete-rate-cancel",d.deleteRateRowCancel),r(document).off("click","#wcsdm-btn--delete-rate-confirm",d.deleteRateRowConfirm),r(document).on("click","#wcsdm-btn--delete-rate-confirm",d.deleteRateRowConfirm),r(document).off("change","#wcsdm-table--table_rates--dummy thead .select-item",d.toggleRows),r(document).on("change","#wcsdm-table--table_rates--dummy thead .select-item",d.toggleRows),r(document).off("change","#wcsdm-table--table_rates--dummy tbody .select-item",d.toggleRow),r(document).on("change","#wcsdm-table--table_rates--dummy tbody .select-item",d.toggleRow),r(document).off("input",".wcsdm-field--context--dummy:not(a)"),r(document).on("input",".wcsdm-field--context--dummy:not(a)",function(a,o){var n;return function(){var e=this,t=arguments;clearTimeout(n),n=setTimeout(function(){n=null,a.apply(e,t)},o)}}(function(e){d.handleRateFieldDummy(e)},500)),r(document).off("change","#woocommerce_wcsdm_distance_unit",d.initForm),r(document).on("change","#woocommerce_wcsdm_distance_unit",d.initForm),d.initForm(),r("#wcsdm-table--table_rates--dummy tbody tr").length||d.addRateRow()},initForm:function(){r('.wcsdm-field-key--total_cost_type > option[value="formula"]').prop("disabled",!d.params.isPro);var e=r("#woocommerce_wcsdm_distance_unit").val(),t=r("#woocommerce_wcsdm_distance_unit").data("fields"),a=_.has(t.label,e)?t.label[e]:"";a&&a.length&&_.each(t.targets,function(e){r(e).text(a)})},handleAddRateButton:function(e){e.preventDefault(),r(e.currentTarget).prop("disabled",!0),d.addRateRow(),r(e.currentTarget).prop("disabled",!1)},handleRateFieldDummy:function(e){e.preventDefault();var t=r(e.target),a=t.closest("tr");a.find(".wcsdm-field--context--hidden[data-id="+t.data("id")+"]").val(e.target.value),t.hasClass("wcsdm-field--context--dummy--max_distance")&&(a.addClass("editing"),t.off("blur",d.sortRateRows),t.on("blur",d.sortRateRows))},showAdvancedRateForm:function(e){e.preventDefault(),r("#wcsdm-table--table_rates--dummy .select-item").prop("checked",!1),r("#wcsdm-table--table_rates--dummy tbody tr").removeClass(),r(e.currentTarget).closest("tr").addClass("editing").find(".wcsdm-field--context--hidden").each(function(e,t){r(".wcsdm-field--context--advanced[data-id="+r(t).data("id")+"]").val(r(t).val())}),n({left:{id:"cancel-advanced",label:"Cancel",icon:"undo"},right:{id:"apply-advanced",label:"Apply Changes",icon:"editor-spellcheck"}}),r(".modal-close-link").hide(),r("#wcsdm-field-group-wrap--advanced_rate").fadeIn().siblings(".wcsdm-field-group-wrap").hide()},applyAdvancedForm:function(e){e.preventDefault(),r(".wcsdm-field--context--advanced").each(function(e,t){var a=r(t).data("id");r("#wcsdm-table--table_rates--dummy tbody tr.editing .wcsdm-field--context--dummy[data-id="+a+"]:not(a)").val(r(t).val()),r("#wcsdm-table--table_rates--dummy tbody tr.editing .wcsdm-field--context--hidden[data-id="+a+"]:not(a)").val(r(t).val())}),d.closeAdvancedRateForm(e)},closeAdvancedRateForm:function(e){e.preventDefault(),r("#wcsdm-field-group-wrap--advanced_rate").hide().siblings(".wcsdm-field-group-wrap").not(".wcsdm-hidden").fadeIn(),n(),r(".modal-close-link").show(),d.scrollToTableRate(),d.sortRateRows()},highlightRow:function(){var e=r("#wcsdm-table--table_rates--dummy tbody tr.editing");e.length&&(e.addClass("highlighted"),setTimeout(function(){e.removeClass("highlighted")},1500)),r("#wcsdm-table--table_rates--dummy tbody tr").removeClass("editing")},addRateRow:function(){var e=r("#wcsdm-table--table_rates--dummy tbody tr:last-child");r("#wcsdm-table--table_rates--dummy tbody").append(wp.template("wcsdm-dummy-row")),e&&e.find(".wcsdm-field--context--hidden:not(a)").each(function(e,t){var a=r(t).data("id"),o="woocommerce_wcsdm_max_distance"===a?Math.ceil(1.8*parseInt(r(t).val(),10)):r(t).val();r("#wcsdm-table--table_rates--dummy tbody tr:last-child .wcsdm-field[data-id="+a+"]").val(o)}),d.scrollToTableRate(),d.initForm()},deleteRateRow:function(e){e.preventDefault(),r("#wcsdm-table--table_rates--dummy tbody .select-item:not(:checked)").closest("tr").hide(),r("#wcsdm-table--table_rates--dummy").find(".wcsdm-col--select-item, .wcsdm-col--link_advanced").hide(),r("#wcsdm-field-group-wrap--table_rates").siblings().hide(),d.scrollToTableRate(),n({left:{id:"delete-rate-cancel",label:"Cancel",icon:"undo"},right:{id:"delete-rate-confirm",label:"Confirm Delete",icon:"trash"}})},deleteRateRowCancel:function(e){e.preventDefault(),r("#wcsdm-table--table_rates--dummy tbody tr").show(),r("#wcsdm-table--table_rates--dummy").find(".wcsdm-col--select-item, .wcsdm-col--link_advanced").show(),r("#wcsdm-field-group-wrap--table_rates").siblings().not(".wcsdm-hidden").fadeIn(),d.scrollToTableRate(),n({left:{id:"delete-rate-select",label:"Delete Selected Rates",icon:"trash"}})},deleteRateRowConfirm:function(e){e.preventDefault(),r("#wcsdm-table--table_rates--dummy tbody .select-item:checked").closest("tr").remove(),r("#wcsdm-table--table_rates--dummy tbody tr").show(),r("#wcsdm-table--table_rates--dummy").find(".wcsdm-col--select-item, .wcsdm-col--link_advanced").show(),r("#wcsdm-table--table_rates--dummy .select-item").prop("checked",!1),r("#wcsdm-field-group-wrap--table_rates").siblings().not(".wcsdm-hidden").fadeIn(),n(),r("#wcsdm-table--table_rates--dummy tbody tr").length||d.addRateRow()},toggleRows:function(a){a.preventDefault(),r.each(r("#wcsdm-table--table_rates--dummy tbody tr"),function(e,t){d.toggleRowSelected(r(t),r(a.target).is(":checked"))}),r(a.target).is(":checked")?n({left:{id:"delete-rate-select",label:"Delete Selected Rates",icon:"trash"}}):n()},toggleRow:function(e){e.preventDefault();var t=r(e.target),a=r(e.target).closest("tr");d.toggleRowSelected(a,t.is(":checked")),r("#wcsdm-table--table_rates--dummy tbody .select-item:checked").length?n({left:{id:"delete-rate-select",label:"Delete Selected Rates",icon:"trash"}}):n();var o=r("#wcsdm-table--table_rates--dummy tbody .select-item").length===r("#wcsdm-table--table_rates--dummy tbody .select-item:checked").length;r("#wcsdm-table--table_rates--dummy thead .select-item").prop("checked",o)},toggleRowSelected:function(e,t){e.find(".wcsdm-field--context--dummy").prop("disabled",t),t?(e.addClass("selected").find(".select-item").prop("checked",t),e.find("a").css("opacity","0.4")):(e.removeClass("selected").find(".select-item").prop("checked",t),e.find("a").css("opacity","1"))},sortRateRows:function(){var e=r("#wcsdm-table--table_rates--dummy > tbody > tr").get().sort(function(e,t){var a=r(e).find(".wcsdm-field--context--dummy--max_distance").val(),o=r(t).find(".wcsdm-field--context--dummy--max_distance").val();return isNaN(a)||!a.length?2:(a=parseInt(a,10))<(o=parseInt(o,10))?-1:o<a?1:0});r.each(e,function(e,t){var a=r(t).hide();r("#wcsdm-table--table_rates--dummy").children("tbody").append(t),a.fadeIn("slow")}),setTimeout(function(){d.highlightRow()},100)},scrollToTableRate:function(){r(".wc-modal-shipping-method-settings").scrollTop(r(".wc-modal-shipping-method-settings").find("form").outerHeight())}},t={initFrom:function(){r("#woocommerce_wcsdm_origin_type").trigger("change"),r(".wc-modal-shipping-method-settings table.form-table").each(function(e,t){r(t).find("tr").length||r(t).remove()}),r(".wcsdm-field-group").each(function(e,t){var a=r(t).attr("id").replace("woocommerce_wcsdm_field_group_",""),o=r(t).next("p").detach(),n=r(t).nextAll("table.form-table").first().attr("id","wcsdm-table--"+a).addClass("wcsdm-table wcsdm-table--"+a).detach();r(t).wrap('<div id="wcsdm-field-group-wrap--'+a+'" class="wcsdm-field-group-wrap wcsdm-field-group-wrap--'+a+'"></div>'),o.appendTo("#wcsdm-field-group-wrap--"+a),n.appendTo("#wcsdm-field-group-wrap--"+a),r(t).hasClass("wcsdm-field-group-hidden")&&r("#wcsdm-field-group-wrap--"+a).addClass("wcsdm-hidden")});var e=_.mapObject(wcsdm_backend,function(e,t){switch(t){case"default_lat":case"default_lng":case"test_destination_lat":case"test_destination_lng":return parseFloat(e);default:return e}});d.init(e),p.init(e),n()},maybeOpenModal:function(){wcsdm_backend.showSettings&&setTimeout(function(){for(var e=!1,t=r(document).find(".wc-shipping-zone-method-type"),a=0;a<t.length;a++){var o=t[a];if(r(o).text()===wcsdm_backend.methodTitle)return r(o).closest("tr").find(".row-actions .wc-shipping-zone-method-settings").trigger("click"),void(e=!0)}e||(r(".wc-shipping-zone-add-method").trigger("click"),r('select[name="add_method_id"]').val(wcsdm_backend.methodId).trigger("change"))},500)},submitForm:function(e){e.preventDefault(),r("#btn-ok").trigger("click")},showApiKeyInstructions:function(e){e.preventDefault(),n({left:{id:"close-instructions",label:"Back",icon:"undo"},right:{id:"get-api-key",label:"Get API Key",icon:"admin-links"}}),r("#wcsdm-field-group-wrap--api_key_instruction").fadeIn().siblings().hide(),r(".modal-close-link").hide()},closeApiKeyInstructions:function(e){e.preventDefault(),r("#wcsdm-field-group-wrap--api_key_instruction").hide().siblings().not(".wcsdm-hidden").fadeIn(),r(".modal-close-link").show(),n()},toggleStoreOriginFields:function(e){e.preventDefault();var a=r(this).val(),t=r(this).data("fields");_.each(t,function(e,t){_.each(e,function(e){t!==a?r("#"+e).closest("tr").hide():r("#"+e).closest("tr").show()})})},bindEvents:function(){r(document.body).off("wc_backbone_modal_loaded",t.initFrom),r(document.body).on("wc_backbone_modal_loaded",t.initFrom),r(document).off("click","#wcsdm-btn--save-settings",t.submitForm),r(document).on("click","#wcsdm-btn--save-settings",t.submitForm),r(document).off("click",".wcsdm-show-instructions",t.showApiKeyInstructions),r(document).on("click",".wcsdm-show-instructions",t.showApiKeyInstructions),r(document).off("click","#wcsdm-btn--close-instructions",t.closeApiKeyInstructions),r(document).on("click","#wcsdm-btn--close-instructions",t.closeApiKeyInstructions),r(document).off("change","#woocommerce_wcsdm_origin_type",t.toggleStoreOriginFields),r(document).on("change","#woocommerce_wcsdm_origin_type",t.toggleStoreOriginFields)},init:function(){t.bindEvents(),t.maybeOpenModal()}};r(document).ready(t.init)}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
